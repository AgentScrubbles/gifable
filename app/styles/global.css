@import url("https://cdn.simplecss.org/simple.min.css");

/* fira-sans-regular - latin */
@font-face {
  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
  font-family: "Fira Sans";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/fira-sans-v16-latin-regular.woff2") format("woff2"),
    /* Chrome 36+, Opera 23+, Firefox 39+ */
      url("/fonts/fira-sans-v16-latin-regular.woff") format("woff"); /* Chrome 5+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
/* fira-sans-800 - latin */
@font-face {
  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */
  font-family: "Fira Sans";
  font-style: normal;
  font-weight: 800;
  src: url("/fonts/fira-sans-v16-latin-800.woff2") format("woff2"),
    /* Chrome 36+, Opera 23+, Firefox 39+ */
      url("/fonts/fira-sans-v16-latin-800.woff") format("woff"); /* Chrome 5+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}

:root,
::backdrop {
  /* Set sans-serif & mono fonts */
  --sans-font: "Fira Sans", -apple-system, BlinkMacSystemFont, "Segoe UI",
    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  --mono-font: Consolas, Menlo, Monaco, "Andale Mono", "Ubuntu Mono", monospace;
  --standard-border-radius: 5px;
}

body > header {
  padding-top: 1rem;
  padding-bottom: 0.5rem;
}

a.active {
  color: var(--text-light);
  text-decoration: none;
}

nav a.active {
  color: var(--accent) !important;
  border-color: var(--accent) !important;
}

.title-link {
  color: var(--text) !important;
  text-decoration: none;
}
.title-link:hover {
  color: var(--accent) !important;
}


.field {
  margin: 0.5em 0;
}
.error {
  color: var(--accent);
}

input.field-error {
  border-color: var(--accent);
}
.field-error i nput {
  border-color: var(--accent);
}
.field--required .field-label:after {
  content: " *";
  color: var(--accent);
}
.field-help {
  font-size: 0.8em;
  color: var(--text-light);
  margin: 0.2em 0 0.5em;
}

center legend {
  margin-left: auto;
  margin-right: auto;
}

dialog {
  width: auto;
}

button.play {
  background-color: var(--accent-bg);
  width: 2em;
  height: 2em;
  line-height: 2em;
  margin: 0;
  text-align: center;
  padding: 0;
  color: var(--text);
}

.img-wrapper {
  position: relative;
  display: inline-block;
  width: 100%;
}

.img-wrapper button.play {
  opacity: 0.5;
  position: absolute;
  bottom: 1em;
  right: 0.8em;
}
.img-wrapper:hover button.play {
  opacity: 0.8;
}
.img-wrapper img {
  background-color: var(--accent-bg);
  border: 2px solid var(--bg);
  width: 100%;
}
.img-wrapper a:hover > img {
  border-color: var(--accent);
}

.media a:focus img {
  border-color: var(--accent);
}

button.link {
  background-color: transparent;
  border: none;
  color: var(--accent);
  padding: 0;
  margin: 0;
  font-size: 1em;
  text-decoration: underline;
  cursor: pointer;
}

[role="button"] {
  color: var(--bg) !important;
  text-decoration: none;
}

a[role="button"].active {
  color: var(--accent) !important;
  background-color: var(--accent-bg) !important;
}

.button-group {
  display: inline-block;
}

.button-group a,
.button-group button {
  border-radius: 0;
  box-shadow: inset 0 0 0 1px var(--accent);
}
.button-group a:first-child,
.button-group button:first-child {
  border-radius: var(--standard-border-radius) 0 0 var(--standard-border-radius);
}
.button-group a:last-child,
.button-group button:last-child {
  border-radius: 0 var(--standard-border-radius) var(--standard-border-radius) 0;
}

.skip-to-content {
  position: absolute;
  top: 1em;
  left: 1em;
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
}
.skip-to-content:focus {
  opacity: 1;
}

.toast-container {
  position: fixed;
  left: unset;
  right: 1em;
  top: 1em;
  margin: 0;
}

dialog.toast {
  position: static;
  width: fit-content;
  margin: 0 0 0.5em auto;
  transition: transform 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  display: block;
  transform: translateX(120%);
}

dialog.toast::backdrop {
  display: none;
}

dialog.toast[open] {
  transform: translateX(0);
}
